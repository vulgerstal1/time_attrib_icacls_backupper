#vulgerstal's timestamp, attribute, security backupper 7g24 8:41p #ICACLS RESTORE REQUIRES ADMIN
#================================================================== SETTINGS ===================================================================================================================
$From                		 = 'C:\Dev_Unity_Projects'
$To                		 	 = 'C:\Dev_Unity_Projects'
$FileFilterExtension		 = '*.*'
$BackupTimeAndAttributes	 = 'C:\Dev_Tests\time_attrib_icacls_backups\BackupTIMESTAMPandATTRIBUTE.csv'
$BackupSecurity			 	 = 'C:\Dev_Tests\time_attrib_icacls_backups\BackupICACLS.csv'
Set-Location $From
#=================================================================== BACKUP ======================================================================================================================
Get-Item $From -force | Select-Object -Property FullName, CreationTime, LastWriteTime, LastAccessTime, Attributes | Export-Csv -NoTypeInformation $BackupTimeAndAttributes
Get-ChildItem  $From -Force -Recurse -Filter $FileFilterExtension | Select-Object -Property FullName, CreationTime, LastWriteTime, LastAccessTime, Attributes | Export-Csv -NoTypeInformation -append $BackupTimeAndAttributes
$csv = Import-Csv -path $BackupTimeAndAttributes
($csv) | ForEach { $_.FullName = (Get-Item $_.FullName -force| Resolve-Path -Relative) }
$csv | Export-Csv $BackupTimeAndAttributes -NoType
$newName = ([System.IO.Path]::GetFileNameWithoutExtension($BackupTimeAndAttributes) + "_" + (get-date -format yyyyMMdd_HHmmss) + ([System.IO.Path]::GetExtension($BackupTimeAndAttributes)))
Rename-Item -Path $BackupTimeAndAttributes -NewName ([System.IO.Path]::GetFileNameWithoutExtension($BackupTimeAndAttributes) + "_" + (get-date -format yyyyMMdd_HHmmss) + ([System.IO.Path]::GetExtension($BackupTimeAndAttributes)))
icacls $From /save $BackupSecurity /t /c
Rename-Item -Path $BackupSecurity -NewName ([System.IO.Path]::GetFileNameWithoutExtension($BackupSecurity) + "_" + (get-date -format yyyyMMdd_HHmmss) + ([System.IO.Path]::GetExtension($BackupSecurity)))
#======================================================== RESTORE TIME AND ATTRIBUTE ============================================================================================================
#HAVE SET $From, $BackupTimeAndAttributes, $BackupSecurity AND TO RESTORE ICACLS - BE ADMIN
#git cloning regenerates .GIT so its ok if my script cant find old git to assign old backup to it, it's just how git works, my focus is to save/restore non-.git folder (just like any .git like service folder)
$csv = Import-Csv $BackupTimeAndAttributes
foreach($line in $csv)
{ 
    $properties = $line | Get-Member -MemberType Properties
    for($i=0; $i -lt $properties.Count;$i++)
    {
        $column = $properties[$i]
        $columnvalue = $line | Select -ExpandProperty $column.Name	
		if($column.Name -eq "FullName")
		{		
			if($columnvalue)
			{							
				if((Test-Path $LINE.fullname -PathType Leaf) -eq $true) { Set-ItemProperty -Path $LINE.fullname -name IsReadOnly -value $false }
				Set-ItemProperty $LINE.fullname -Name CreationTime -Value $LINE.CreationTime -Force
				Set-ItemProperty $LINE.fullname -Name LastWriteTime -Value $LINE.LastWriteTime -Force
				Set-ItemProperty $LINE.fullname -Name LastAccessTime -Value $LINE.LastAccessTime -Force
				$a = Get-Item $LINE.fullname -force
				$a.attributes = $LINE.Attributes	
			}	
		}
	}
}
icacls (Split-Path -parent $From) /restore $BackupSecurity /t /c